swagger: '2.0'
info:
  description: DAM综合接口，提供对后端微服务包装后的接口
  version: '1.0.0'
  title: VCG DAM RESTFUL API
  license:
    name: VCG 2.0
    url: 'http://www.vcg.com'
host: ''
basePath: /api
tags:
  - name: user
    description: 用户相关API
  - name: OAuth2 Token
    description: OAuth2认证相关API
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
  - '*/*'

paths:
  /oauth2/access_token:
      post:
        summary: Access token
        description: |
          根据client id,client secret,username,password以及grant type获取鉴权用户的access token和refres token等详情<br/>
          采用OAuth2 Passport模式鉴权(参见Oauth2规范, 要求使用basic Auth方式传递client_id， client-sercret) 
        parameters:
          - name: username
            in: formData
            description: |
              VCG DAM 账号名称
            required: true
            type: string
          - name: password
            in: formData
            description: |
              VCG DAM 账号密码
            required: true
            type: string
          - name: grant_type
            in: formData
            description: |
              类型一定为password
            default: "password"
            required: true
            type: string
        # security:
        #   - password_auth
        tags:
          - OAuth2 Token
        responses:
          200:
            description: |
              获取access token成功
            headers:
              cache-control: 
                type: string
              pragma: 
                type: string
            schema:
              type: object
              properties:
                access_token:
                  type: string
                token_type:
                  type: string
                refresh_token:
                  type: string
                expires_in:
                  type: integer
          403:
            description: |
              获取access token失败
            schema:
              $ref: "#/definitions/NotPermitted403"
          # 429:
          #   $ref: '/rateLimit'

  /oauth2/refresh_token:
    post:
      summary: Refresh token
      description: |
        根据鉴权用户ID和密钥访问refresh_token进行过期token的刷新操作,重新生成token,并恢复token的失效时间.<br/>
        采用OAuth2 refresh_token 模式鉴权。(参见Oauth2规范, 要求使用basic Auth方式传递client_id， client-sercret) 
      parameters:
        - name: grant_type
          in: formData
          required: true
          description: |
            鉴权请求类型等于refresh_token.
          type: string
          default: refresh_token
        - name: refresh_token
          in: formData
          required: true
          type: string
          description: refresh token.
      tags:
        - OAuth2 Token
      # security:
      #   - password_auth
      responses:
        200:
          description: |
            刷新token成功
          schema:
            type: object
            properties:
              refresh_token:
                type: string
              token_type: 
                type: string
              access_token:
                type: string
              expires_in:
                type: integer
        403:
          description: |
            刷新token失败
          schema:
            type: object
            properties:
              error:
                type: string
                default: "invalid_request"
              error_description:
                type: string
                default: "Invalid refresh_token"
        # 429:
        #   $ref: '#/definitions/rateLimit'
  /login:
    post:
      tags: 
        - user
      description: 用户登陆
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserModel'
      parameters:
        - name: 'user'
          description: 用户名和密码
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserLoginModel'

  # /remember_me:
  #   post:
  #     tags: 
  #       - user
  #     description: 浏览器记住cookie，实现一段时间免密码登陆
  #     responses:
  #       '200':
  #         description: OK

  /users:
    post:
      tags:
        - user
      parameters:
        - name: user
          description: 创建群组用户
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserInfoModel'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserInfoModel'

  /profile:
    get:
      tags:
        - user
      description: 查看当前登录用户的个人信息
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserInfoModel'

  /forget_me:
    post:
      tags: 
        - user
      description: 清除浏览器cookie，取消免密码登陆
      responses:
        '200':
          description: OK

  /captcha:
    get:
      tags: 
        - user
      description: 获取验证码
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              data:
                type: object

  /logout:
    post:
      tags:
        - user
      description: 用户登出
      responses:
        200:
          description: OK

  /oauthclients:
    post:
      tags:
        - oauthClient
      parameters:
        - name: oauth
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              description:
                type: string

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/OauthClient'
    get:
      tags:
        - oauthClient
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OauthClient'

  /oauthclients/{id}:         
    delete:
      tags:
        - oauthClient
      parameters:
        - name: id
          type: number
          in: path
          required: true
      responses:
        '200':
          description: OK

  /download/verify:
    post:
      tags:
        - download
      description: 验证当前用户是否有权限下载资源
      parameters:
        - name: ids 
          description: 待验证的资源列表
          in: body
          schema:
            type: array
            items:
              type: number
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              allow:
                type: boolean
                description: 是否允许当前用户下载资源

  /download/proxy/{file}:
    get:
      tags:
        - download
      description: 通过DAM作为代理的方式下载文件 |
        一般情况下客户端直接访问下载地址下载文件，对于外包项目(李鹏)的特殊需求，无法在下载资源地址中 |
        添加query参数，所以用post方式，把阿里云的参数放在body中传递
      parameters:
        - name: file
          description: 资源地址，对应/assets/downloadurl返回的 proxy.pathname
          in: path
          required: true
      responses:
        200:
          description: OK

  /search:
    get:
      tags:
        - search
      description: 通过关键字搜索资源
      parameters:
        - name: q
          description: 关键字列表，通过英文逗号分隔
          in: query
          type: string
        - name: from
          description: 搜索资产来源，当前的来源有DAM,VCG
          required: false,
          default: DAM
          type: string
          enum: 
            - DAM
            - VCG
        - name: pageNum
          description: 第几页
        - name: pageSize
          description: 每页条目
        
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
          
definitions:
  UserModel:
    type: object
    properties:
      username:
        type: string
        description: 用户登陆名称
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionModel'
  
  UserInfoModel:
    type: object
    required:
      - realName
      - userName
      - mobile
      - password
    properties:
      realName:
        type: string
      userName:
        type: string
      mobile:
        type: string
      password:
        type: string
      description:
        type: string
      invitationCode:
        type: string
        description: 群组邀请码，可选参数，若指定该参数，则注册到邀请码相应的群组中，否则注册到当前用户的同组用户中
      # email:
      #   type: string
      isWorkgroupAdmin:
        type: boolean
        description: 是否是该所在群组的管理员
      isMsg:
        type: boolean
        description: 是否向该用户发送群组邀请码
      
  UserLoginModel:
    type: object
    required:
      - username
      - password
      - remember
      - captcha
    properties:
      username:
        type: string
        description: 用户登陆名称
      password:
        type: string
        description: 用户登陆密码
      remember:
        type: boolean
        description: 是否记住密码
      captcha:
        type: string
        description: 验证码  

  PermissionModel:
    type: object
    properties:
      name:
        type: string
        description: 权限项名称
      description:
        type: string
        description: 权限项描述
      type:
        type: string
        description: 权限项类别

  OauthClient:
    type: object
    properties:
      id:
        type: string
        description: 数据库ID
      clientId:
        type: string
        description: 授权ID
      clientSecret:
        type: string
        description: 授权密码
      groupId:
        type: number
        description: 授权的组ID（当前不支持直接对用户授权）

  # rateLimit:
  #   description: |
  #     限速
  #   schema:
  #     headers:
  #       X-RateLimit-Remaining-Minute:
  #         description: |
  #           "每分钟限速"
  #         type: integer
  #       X-RateLimit-Remaining-Second:
  #         description: |
  #           "每秒钟限速"
  #         type: integer

  FailingResponses400:
    description: 请求失败
    type: object
    required:
      - "error_description"
      - "error"
    properties:
      error_description:
        type: "string"
      error:
        type: "string"
        default: "访问资源不存在"

  FailingResponses404:
    description: 请求失败
    type: object
    required:
      - "error_description"
      - "error"
    properties:
      error_description:
        type: "string"
      error:
        type: "string"
        default: "访问资源不存在"

  FailingAuth401:
    description: 鉴权失败
    type: object
    required:
      - "error_description"
      - "error"
    properties:
      error_description:
        type: "string"
        default: "The access token is missing"
      error:
        type: "string"
        default: "身份认证失败"

  NotPermitted403:
    description: 资源不可用
    type: object
    required:
      - "error_description"
      - "error"
    properties:
      error_description:
        type: "string"
        default: "无权限访问该资源"
      error:
        type: "string"
        default: "无权限访问该资源"

securityDefinitions:
  apikey_auth:
    type: apiKey
    description: 访问接口需要携带 client_id(client id)
    name: client-id
    in: header
  accesstoken_auth:
    type: apiKey
    description: 访问接口需要携带 Bearer+空格+access token值
    name: authorization
    in: header
    
  password_auth:
    type: oauth2
    description: oauth2 password flow
    flow: password
    tokenUrl: oauth2/access_token